import { ArrowHeadType } from 'react-flow-renderer'

// mocks for the initial state
export const initialElements = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', payload: { someProperty: 'test' } },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-999',
    source: '1',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '999',
    type: 'end',
    data: { isFinal: true, name: 'End' },
    position: { x: 250, y: 230 },
  },
]
export const initialElementsDSL = {
  comment: 'Increase someting DSL',
  title: 'Increase someting DSL',
  startAt: 'segments1',
  states: {
    segments1: {
      type: 'segment',
      end: true,
      payload: {
        someProperty: 'test',
      },
    },
  },
}
// mocks for the elements With Child If
export const elementsWithChildIf = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-9',
    source: '1',
    target: '9',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '9',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e9-8',
    source: '9',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '8',
    type: 'segment',
    data: {
      data: {
        edgeLabel: 'yes',
      },
      payload: {
        seconds: 300,
      },
      name: 'Wait for trigger',
      type: 'wait_trigger',
      shape: 'rhomb',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e8-5',
    source: '8',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 740 } },
  { id: '7', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 730 } },
  {
    id: 'e5-7',
    source: '5',
    target: '7',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '11', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 390 } },
  {
    id: 'e9-11',
    source: '9',
    target: '11',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]

export const elementsWithChildIfDSL = {
  comment: 'Increase someting DSL',
  title: 'Increase someting DSL',
  startAt: 'segments1',
  states: {
    segments1: {
      type: 'segment',
      next: 'ifElse9',
    },
    ifElse9: {
      type: 'ifElse',
      choices: [
        {
          end: true,
        },
      ],
      default: 'waitForTrigger8',
    },
    waitForTrigger8: {
      type: 'waitForTrigger',
      next: 'ifElse5',
      payload: {
        seconds: 300,
      },
    },
    ifElse5: {
      type: 'ifElse',
      choices: [
        {
          end: true,
        },
      ],
      end: true,
    },
  },
}
// mocks for the complex elements
export const complexFlow = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', iconName: 'segment' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-7',
    source: '1',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '7',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
      iconName: 'time_delay',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e7-5',
    source: '7',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e5-8',
    source: '5',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '8',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'Wait for trigger',
      type: 'wait_for_trigger',
      shape: 'rhomb',
      iconName: 'wait_for_trigger',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e8-10',
    source: '8',
    target: '10',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '10',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 730 },
  },
  {
    id: 'e10-9',
    source: '10',
    target: '9',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '9',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'Loop',
      type: 'loop',
      shape: 'rhomb',
      iconName: 'loop',
    },
    position: { x: 250, y: 900 },
  },
  {
    id: 'e9-999',
    source: '9',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 1080 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 560 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '11', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 1070 } },
  {
    id: 'e10-12',
    source: '10',
    target: '12',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '12',
    type: 'segment',
    data: {
      data: { edgeLabel: 'no' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 570, y: 900 },
  },
  {
    id: 'e12-11',
    source: '12',
    target: '11',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '13', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 1410 } },
  {
    id: 'e12-14',
    source: '12',
    target: '14',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '14',
    type: 'segment',
    data: {
      data: { edgeLabel: 'no' },
      name: 'Wait for trigger',
      type: 'wait_for_trigger',
      shape: 'rhomb',
      iconName: 'wait_for_trigger',
    },
    position: { x: 890, y: 1070 },
  },
  {
    id: 'e14-15',
    source: '14',
    target: '15',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '15',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 890, y: 1240 },
  },
  {
    id: 'e15-13',
    source: '15',
    target: '13',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '16', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 1210, y: 1410 } },
  {
    id: 'e15-16',
    source: '15',
    target: '16',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]

export const complexFlowDSL = {
  comment: 'Increase someting DSL',
  title: 'Increase someting DSL',
  startAt: 'segments1',
  states: {
    segments1: {
      type: 'segment',
      next: 'timeDelay7',
    },
    timeDelay7: {
      type: 'timeDelay',
      next: 'ifElse5',
    },
    ifElse5: {
      type: 'ifElse',
      choices: [
        {
          end: true,
        },
      ],
      default: 'waitForTrigger8',
    },
    waitForTrigger8: {
      type: 'waitForTrigger',
      next: 'ifElse10',
    },
    ifElse10: {
      type: 'ifElse',
      choices: [
        {
          next: 'ifElse12',
        },
      ],
      default: 'loop9',
    },
    loop9: {
      type: 'loop',
      end: true,
    },

    ifElse12: {
      type: 'ifElse',
      choices: [
        {
          next: 'waitForTrigger14',
        },
      ],
      end: true,
    },
    waitForTrigger14: {
      type: 'waitForTrigger',
      next: 'ifElse15',
    },
    ifElse15: {
      type: 'ifElse',
      choices: [
        {
          end: true,
        },
      ],
      end: true,
    },
  },
}
// mocks for more complex elements
export const moreComplexFlow = [
  {
    id: '1',
    type: 'segment',
    data: {
      isInitial: true,
      name: 'Segments',
      shape: 'circle',
      iconName: 'segment',
      payload: {
        groups: [
          {
            groups: [
              {
                platform: 'Salesforce',
                object: 'Account',
                type: 'string',
                field: 'NaicsCode',
                operator: '',
                value: '',
                isNewStatement: false,
              },
              {
                platform: 'Salesforce',
                object: 'Opportunity',
                type: 'date',
                field: 'CloseDate',
                operator: '',
                value: '',
                isNewStatement: false,
              },
            ],
            relationOperator: 'AND',
          },
          {
            groups: [
              {
                platform: 'Salesforce',
                object: 'Account',
                type: 'string',
                field: 'TickerSymbol',
                operator: '',
                value: '',
                isNewStatement: false,
              },
            ],
            relationOperator: 'AND',
          },
          {
            groups: [
              {
                platform: 'Zendesk',
                object: 'Ticket',
                type: 'assignee',
                field: 'Assignee',
                operator: '',
                value: '',
                isNewStatement: false,
              },
            ],
            relationOperator: 'AND',
          },
        ],
        relationOperator: 'OR',
      },
    },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-7',
    source: '1',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '7',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
      iconName: 'time_delay',
      payload: { units: 'minutes', amount: 1 },
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e7-5',
    source: '7',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e5-8',
    source: '5',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '8',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'Wait for trigger',
      type: 'wait_for_trigger',
      shape: 'rhomb',
      iconName: 'wait_for_trigger',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e8-10',
    source: '8',
    target: '10',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '10',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 730 },
  },
  {
    id: 'e10-9',
    source: '10',
    target: '9',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '9',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'Loop',
      type: 'loop',
      shape: 'rhomb',
      iconName: 'loop',
    },
    position: { x: 250, y: 900 },
  },
  {
    id: 'e9-999',
    source: '9',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 1080 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 1530, y: 1410 } },
  {
    id: 'e5-20',
    source: '5',
    target: '20',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '20',
    type: 'segment',
    data: {
      data: { edgeLabel: 'no' },
      name: 'Send email',
      type: 'send_email',
      shape: 'square',
      platform: 'Salesforce',
      iconName: 'send_email',
    },
    position: { x: 1530, y: 560 },
  },
  {
    id: 'e20-17',
    source: '20',
    target: '17',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '17',
    type: 'segment',
    data: {
      data: { edgeLabel: 'no' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 1530, y: 730 },
  },
  {
    id: 'e17-21',
    source: '17',
    target: '21',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '21',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'Create opportunity',
      type: 'create_opportunity',
      shape: 'square',
      platform: 'Salesforce',
      iconName: 'create_opportunity',
    },
    position: { x: 1530, y: 900 },
  },
  {
    id: 'e21-22',
    source: '21',
    target: '22',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '22',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 1530, y: 1070 },
  },
  {
    id: 'e22-19',
    source: '22',
    target: '19',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '19',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'Update lead',
      type: 'update_lead',
      shape: 'square',
      platform: 'Salesforce',
      iconName: 'update_lead',
    },
    position: { x: 1530, y: 1240 },
  },
  {
    id: 'e19-6',
    source: '19',
    target: '6',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '11', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 1070 } },
  {
    id: 'e10-12',
    source: '10',
    target: '12',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '12',
    type: 'segment',
    data: {
      data: { edgeLabel: 'no' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 570, y: 900 },
  },
  {
    id: 'e12-11',
    source: '12',
    target: '11',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '13', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 1410 } },
  {
    id: 'e12-14',
    source: '12',
    target: '14',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '14',
    type: 'segment',
    data: {
      data: { edgeLabel: 'no' },
      name: 'Wait for trigger',
      type: 'wait_for_trigger',
      shape: 'rhomb',
      iconName: 'wait_for_trigger',
    },
    position: { x: 890, y: 1070 },
  },
  {
    id: 'e14-15',
    source: '14',
    target: '15',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '15',
    type: 'segment',
    data: {
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 890, y: 1240 },
  },
  {
    id: 'e15-13',
    source: '15',
    target: '13',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '16', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 1210, y: 1410 } },
  {
    id: 'e15-16',
    source: '15',
    target: '16',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '18', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 1850, y: 900 } },
  {
    id: 'e17-18',
    source: '17',
    target: '18',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '23', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 1850, y: 1240 } },
  {
    id: 'e22-23',
    source: '22',
    target: '23',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]
export const moreComplexFlowDSL = {
  comment: 'Increase someting DSL',
  title: 'Increase someting DSL',
  startAt: 'segments1',
  states: {
    segments1: {
      type: 'segment',
      next: 'timeDelay7',
      payload: {
        groups: [
          {
            groups: [
              {
                platform: 'Salesforce',
                object: 'Account',
                type: 'string',
                field: 'NaicsCode',
                operator: '',
                value: '',
                isNewStatement: false,
              },
              {
                platform: 'Salesforce',
                object: 'Opportunity',
                type: 'date',
                field: 'CloseDate',
                operator: '',
                value: '',
                isNewStatement: false,
              },
            ],
            relationOperator: 'AND',
          },
          {
            groups: [
              {
                platform: 'Salesforce',
                object: 'Account',
                type: 'string',
                field: 'TickerSymbol',
                operator: '',
                value: '',
                isNewStatement: false,
              },
            ],
            relationOperator: 'AND',
          },
          {
            groups: [
              {
                platform: 'Zendesk',
                object: 'Ticket',
                type: 'assignee',
                field: 'Assignee',
                operator: '',
                value: '',
                isNewStatement: false,
              },
            ],
            relationOperator: 'AND',
          },
        ],
        relationOperator: 'OR',
      },
    },
    timeDelay7: { type: 'timeDelay', next: 'ifElse5', payload: { units: 'minutes', amount: 1 } },
    ifElse5: { type: 'ifElse', default: 'waitForTrigger8', choices: [{ next: 'sendEmail20' }] },
    waitForTrigger8: { type: 'waitForTrigger', next: 'ifElse10' },
    ifElse10: { type: 'ifElse', default: 'loop9', choices: [{ next: 'ifElse12' }] },
    loop9: { type: 'loop', end: true },
    ifElse12: { type: 'ifElse', end: true, choices: [{ next: 'waitForTrigger14' }] },
    waitForTrigger14: { type: 'waitForTrigger', next: 'ifElse15' },
    ifElse15: { type: 'ifElse', end: true, choices: [{ end: true }] },
    sendEmail20: { type: 'sendEmail', next: 'ifElse17' },
    ifElse17: { type: 'ifElse', default: 'createOpportunity21', choices: [{ end: true }] },
    createOpportunity21: { type: 'createOpportunity', next: 'ifElse22' },
    ifElse22: { type: 'ifElse', default: 'updateLead19', choices: [{ end: true }] },
    updateLead19: { type: 'updateLead', end: true },
  },
}
