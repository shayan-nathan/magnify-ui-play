import { ArrowHeadType } from 'react-flow-renderer'

export const initialElements = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-999',
    source: '1',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
    style: { stroke: '#000' },
  },
  {
    id: '999',
    type: 'end',
    data: { isFinal: true, name: 'End' },
    position: { x: 250, y: 230 },
  },
]
export const ifElseAction = {
  name: 'If / Else',
  shape: 'rhomb',
  type: 'if_else',
}

export const basicActionSegments = {
  name: 'Segments',
  shape: 'circle',
  type: 'segment',
}
export const basicActionDelay = {
  name: 'Time delay',
  shape: 'rhomb',
  type: 'time_delay',
}

export const edgeDropData = {
  id: 'e1-999',
  name: 'If / Else',
  shape: 'rhomb',
  source: '1',
  target: '999',
  type: 'if_else',
}
export const edgeDropDataSegment = {
  id: 'e1-999',
  source: '1',
  target: '999',
  data: { edgeLabel: 'yes' },
  ...basicActionSegments,
}

export const edgeDropDataCondition = {
  id: 'e5-999',
  source: '5',
  target: '999',
  data: { edgeLabel: 'yes' },
  ...ifElseAction,
}

export const edgeDropDataFirstCondition = {
  id: 'e1-999',
  source: '1',
  target: '999',
  data: { edgeLabel: 'yes' },
  ...ifElseAction,
}
export const edgeDropDataSecondCondition = {
  id: 'e5-6',
  source: '5',
  target: '6',
  data: { edgeLabel: 'no' },
  ...ifElseAction,
}
export const mockFunction = () => {}

export const expectedElementsAfterAddingBasicOne = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      name: 'Segments',
      type: 'segment',
      shape: 'circle',
      data: { edgeLabel: 'yes' },
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 400 } },
]

export const childNodesOfSegment = [
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      name: 'Segments',
      type: 'segment',
      shape: 'circle',
      data: { edgeLabel: 'yes' },
    },
    position: { x: 250, y: 220 },
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 400 } },
]

export const elementsWithParentIf = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-8',
    source: '5',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '8',
    type: 'segment',
    data: {
      id: 'e5-999',
      source: '5',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'Wait for trigger',
      type: 'wait_trigger',
      shape: 'rhomb',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e8-9',
    source: '8',
    target: '9',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e8-999',
      source: '8',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e9-999',
    source: '9',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 740 } },
  { id: '7', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 390 } },
  {
    id: 'e5-7',
    source: '5',
    target: '7',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]

export const elementsWithChildIf = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-9',
    source: '1',
    target: '9',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e1-8',
      source: '1',
      target: '8',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e9-8',
    source: '9',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '8',
    type: 'segment',
    data: {
      id: 'e1-5',
      source: '1',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'Wait for trigger',
      type: 'wait_trigger',
      shape: 'rhomb',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e8-5',
    source: '8',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 740 } },
  { id: '7', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 730 } },
  {
    id: 'e5-7',
    source: '5',
    target: '7',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '11', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 390 } },
  {
    id: 'e9-11',
    source: '9',
    target: '11',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]

export const parentNodesAfterAddingTwoIfs = [
  { id: '7', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 390 } },
]

export const expectedNodesAfterAddingBasicOneAndIf = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'Segments',
      type: 'segment',
      shape: 'circle',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '6',
    type: 'segment',
    data: {
      id: 'e5-999',
      source: '5',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e6-999',
    source: '6',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 570 } },
  { id: '7', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 560 } },
  {
    id: 'e6-7',
    source: '6',
    target: '7',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]

export const expectedElementsAfterAddingIf = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 400 } },
  { id: '7', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 390 } },
  {
    id: 'e5-7',
    source: '5',
    target: '7',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
]

export const expectedElementsAfterAddingSecondIf = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      shape: 'rhomb',
      type: 'if_else',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '999',
    type: 'end',
    data: { isFinal: true, name: 'End' },
    position: { x: 250, y: 400 },
  },
  {
    id: '6',
    type: 'end',
    data: { isFinal: true, name: 'End' },
    position: { x: 570, y: 560 },
  },
  {
    id: 'e5-7',
    source: '5',
    target: '7',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e5-6',
      source: '5',
      target: '6',
      data: { edgeLabel: 'no' },
      name: 'If / Else',
      shape: 'rhomb',
      type: 'if_else',
    },
    position: { x: 570, y: 390 },
  },
  {
    id: 'e7-6',
    source: '7',
    target: '6',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '8',
    type: 'end',
    data: { isFinal: true, name: 'End' },
    position: { x: 890, y: 560 },
  },
  {
    id: 'e7-8',
    source: '7',
    target: '8',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
]
export const complexNodes = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  { id: '10', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 560 } },
  {
    id: '8',
    type: 'segment',
    data: {
      id: 'e5-7',
      source: '5',
      target: '7',
      data: { edgeLabel: 'no' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 570, y: 390 },
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 400 } },
  { id: '7', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 560 } },
]

export const twoIfsWithCollisionPosibility = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-7',
    source: '1',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e1-5',
      source: '1',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e7-5',
    source: '7',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 570 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 560 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '8', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 560 } },
  {
    id: 'e7-9',
    source: '7',
    target: '9',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e7-8',
      source: '7',
      target: '8',
      data: { edgeLabel: 'no' },
      name: 'Wait for trigger',
      type: 'wait_trigger',
      shape: 'rhomb',
    },
    position: { x: 890, y: 390 },
  },
  {
    id: 'e9-8',
    source: '9',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]
export const edgeDropDataConditionOnChild = {
  id: 'e5-6',
  source: '5',
  target: '6',
  data: { edgeLabel: 'no' },
  ...ifElseAction,
}

export const elementsStateWithCollisionAfterAddingAnotherIf = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-7',
    source: '1',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e1-5',
      source: '1',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e7-5',
    source: '7',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 570 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 730 } },
  {
    id: 'e5-10',
    source: '5',
    target: '10',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  {
    id: '10',
    type: 'segment',
    data: {
      id: 'e5-6',
      source: '5',
      target: '6',
      data: { edgeLabel: 'no' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 570, y: 560 },
  },
  {
    id: 'e10-6',
    source: '10',
    target: '6',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '8', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 1210, y: 560 } },
  {
    id: 'e7-9',
    source: '7',
    target: '9',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e7-8',
      source: '7',
      target: '8',
      data: { edgeLabel: 'no' },
      name: 'Wait for trigger',
      type: 'wait_trigger',
      shape: 'rhomb',
    },
    position: { x: 1210, y: 390 },
  },
  {
    id: 'e9-8',
    source: '9',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '11', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 730 } },
  {
    id: 'e10-11',
    source: '10',
    target: '11',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
]

export const intialTopBottomCollide = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-7',
    source: '5',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e5-999',
      source: '5',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e7-8',
    source: '7',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '8',
    type: 'segment',
    data: {
      id: 'e7-999',
      source: '7',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e8-999',
    source: '8',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 740 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 390 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '9', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 730 } },
  {
    id: 'e8-9',
    source: '8',
    target: '9',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]

export const edgeDropDataTopBottomCloide = {
  id: 'e5-6',
  source: '5',
  target: '6',
  data: { edgeLabel: 'no' },
  ...basicActionDelay,
}

export const elementsStateWithInitialTopBottomClollide = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-7',
    source: '5',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e5-999',
      source: '5',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e7-8',
    source: '7',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '8',
    type: 'segment',
    data: {
      id: 'e7-999',
      source: '7',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e8-999',
    source: '8',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 740 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 560 } },
  {
    id: 'e5-10',
    source: '5',
    target: '10',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  {
    id: '10',
    type: 'segment',
    data: {
      id: 'e5-6',
      source: '5',
      target: '6',
      data: { edgeLabel: 'no' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
    },
    position: { x: 890, y: 390 },
  },
  {
    id: 'e10-6',
    source: '10',
    target: '6',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '9', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 730 } },
  {
    id: 'e8-9',
    source: '8',
    target: '9',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
]

/* complex if/else decrase parent elements X axis having siblings if else branches */
export const basicConsecutiveBranches = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', iconName: 'segment' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-7',
    source: '1',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e1-5',
      source: '1',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e7-5',
    source: '7',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 570 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 560 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '8', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 390 } },
  {
    id: 'e7-8',
    source: '7',
    target: '8',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]

export const edgeDropDataDelayBetWeenTwoIfs = {
  id: 'e7-5',
  source: '7',
  target: '5',
  data: { edgeLabel: 'yes' },
  ...basicActionDelay,
  iconName: 'time_delay',
}
export const elementsStateAfterAddingDelay = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', iconName: 'segment' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-7',
    source: '1',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e1-5',
      source: '1',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e7-9',
    source: '7',
    target: '9',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e7-5',
      source: '7',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
      iconName: 'time_delay',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e9-5',
    source: '9',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 740 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 730 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  { id: '8', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 390 } },
  {
    id: 'e7-8',
    source: '7',
    target: '8',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
]

// should not move the top childs
export const consecutiveBranchesWithTopBranchWithOneChild = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', iconName: 'segment' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-7',
    source: '1',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e1-5',
      source: '1',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e7-5',
    source: '7',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 570 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 560 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '8', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 560 } },
  {
    id: 'e7-9',
    source: '7',
    target: '9',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e7-8',
      source: '7',
      target: '8',
      data: { edgeLabel: 'no' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
      iconName: 'time_delay',
    },
    position: { x: 890, y: 390 },
  },
  {
    id: 'e9-8',
    source: '9',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]
export const consecutiveBranchesWithTopBranchWithOneChildAfterAddingDelay = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', iconName: 'segment' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-7',
    source: '1',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e1-5',
      source: '1',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e7-10',
    source: '7',
    target: '10',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '10',
    type: 'segment',
    data: {
      id: 'e7-5',
      source: '7',
      target: '5',
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
      iconName: 'time_delay',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e10-5',
    source: '10',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e5-999',
    source: '5',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 740 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 730 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  { id: '8', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 560 } },
  {
    id: 'e7-9',
    source: '7',
    target: '9',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e7-8',
      source: '7',
      target: '8',
      data: { edgeLabel: 'no' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
      iconName: 'time_delay',
    },
    position: { x: 890, y: 390 },
  },
  {
    id: 'e9-8',
    source: '9',
    target: '8',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
]
// should move to the left the upper branches
export const threeConsecutiveBranches = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', iconName: 'segment' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-9',
    source: '5',
    target: '9',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e5-7',
      source: '5',
      target: '7',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e9-7',
    source: '9',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e5-999',
      source: '5',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e7-999',
    source: '7',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 740 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 1210, y: 390 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '8', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 730 } },
  {
    id: 'e7-8',
    source: '7',
    target: '8',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '10', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 560 } },
  {
    id: 'e9-10',
    source: '9',
    target: '10',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
]

export const edgeDropDataDelayBetWeenThreeIfs = {
  id: 'e9-7',
  source: '9',
  target: '7',
  data: { edgeLabel: 'yes' },
  ...basicActionDelay,
  iconName: 'time_delay',
}
export const expectedResultAfterAddingDelay = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', iconName: 'segment' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-9',
    source: '5',
    target: '9',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '9',
    type: 'segment',
    data: {
      id: 'e5-7',
      source: '5',
      target: '7',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e9-11',
    source: '9',
    target: '11',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '11',
    type: 'segment',
    data: {
      id: 'e9-7',
      source: '9',
      target: '7',
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
      iconName: 'time_delay',
    },
    position: { x: 250, y: 560 },
  },
  {
    id: 'e11-7',
    source: '11',
    target: '7',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  {
    id: '7',
    type: 'segment',
    data: {
      id: 'e5-999',
      source: '5',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'If / Else',
      type: 'if_else',
      shape: 'rhomb',
      iconName: 'if_else',
    },
    position: { x: 250, y: 730 },
  },
  {
    id: 'e7-999',
    source: '7',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: 'arrow',
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 910 } },
  { id: '6', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 890, y: 390 } },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  { id: '8', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 900 } },
  {
    id: 'e7-8',
    source: '7',
    target: '8',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
  { id: '10', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 570, y: 560 } },
  {
    id: 'e9-10',
    source: '9',
    target: '10',
    type: 'custom',
    sourceHandle: 's-right',
    targetHandle: 't-top',
    data: { edgeLabel: 'no' },
    arrowHeadType: 'arrow',
  },
]
/* k */
/* Update X position */

export const elementsToUpdateX = [
  {
    id: '7',
    type: 'segment',
    position: { x: 890, y: 390 },
  },
  { id: '6', type: 'end', position: { x: 890, y: 560 } },
  { id: '8', type: 'end', position: { x: 1210, y: 560 } },
]
/* increase Position of nodes with Z unit */
export const elementsAfterIncreasingOneUnit = [
  {
    id: '7',
    type: 'segment',
    position: { x: 1210, y: 390 },
  },
  { id: '6', type: 'end', position: { x: 1210, y: 560 } },
  { id: '8', type: 'end', position: { x: 1530, y: 560 } },
]
export const elementsAfterIncreasingTwoUnits = [
  {
    id: '7',
    type: 'segment',
    position: { x: 1530, y: 390 },
  },
  { id: '6', type: 'end', position: { x: 1530, y: 560 } },
  { id: '8', type: 'end', position: { x: 1850, y: 560 } },
]
/* decrese Position of nodes with Z unit */
export const elementsAfterDecresingOneUnit = [
  {
    id: '7',
    type: 'segment',
    position: { x: 570, y: 390 },
  },
  { id: '6', type: 'end', position: { x: 570, y: 560 } },
  { id: '8', type: 'end', position: { x: 890, y: 560 } },
]
export const elementsAfterDecresingTwoUnits = [
  {
    id: '7',
    type: 'segment',
    position: { x: 250, y: 390 },
  },
  { id: '6', type: 'end', position: { x: 250, y: 560 } },
  { id: '8', type: 'end', position: { x: 570, y: 560 } },
]
// Get node helpers
export const basicElementsInRow = [
  {
    id: '1',
    type: 'segment',
    data: { isInitial: true, name: 'Segments', shape: 'circle', iconName: 'segment' },
    position: { x: 250, y: 50 },
  },
  {
    id: 'e1-5',
    source: '1',
    target: '5',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '5',
    type: 'segment',
    data: {
      id: 'e1-999',
      source: '1',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'Wait for trigger',
      type: 'wait_for_trigger',
      shape: 'rhomb',
      iconName: 'wait_for_trigger',
    },
    position: { x: 250, y: 220 },
  },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  {
    id: '6',
    type: 'segment',
    data: {
      id: 'e5-999',
      source: '5',
      target: '999',
      data: { edgeLabel: 'yes' },
      name: 'Time delay',
      type: 'time_delay',
      shape: 'rhomb',
      iconName: 'time_delay',
    },
    position: { x: 250, y: 390 },
  },
  {
    id: 'e6-999',
    source: '6',
    target: '999',
    type: 'custom',
    sourceHandle: 's-bottom',
    targetHandle: 't-top',
    data: { edgeLabel: 'yes' },
    arrowHeadType: ArrowHeadType.Arrow,
  },
  { id: '999', type: 'end', data: { isFinal: true, name: 'End' }, position: { x: 250, y: 570 } },
]
